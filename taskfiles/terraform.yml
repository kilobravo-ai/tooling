---

# see https://taskfile.dev/docs/reference/schema#version
version: "3"

# see https://taskfile.dev/docs/reference/schema#env
env:
  # see https://developer.hashicorp.com/terraform/tutorials/automation/automate-terraform
  TF_IN_AUTOMATION: "1"
  # see https://developer.hashicorp.com/terraform/cli/commands#upgrade-and-security-bulletin-checks
  CHECKPOINT_DISABLE: "1"

# see https://taskfile.dev/docs/reference/schema#includes
includes:
  1password:
    aliases:
      - "1p"
    flatten: false
    namespace: "1password"
    optional: false
    taskfile: "./1password.yml"

# see https://taskfile.dev/docs/reference/schema#task
tasks:
  preflight:
    internal: true
    deps:
      - 1password:preflight
    preconditions:
      # check if the `terraform` binary is available
      - sh: command -v terraform >/dev/null
        msg: "Terraform is required"
    cmds:
      # clear the terminal for better readability
      - clear

  apply:
    desc: "Run `terraform apply` and inject Secrets from 1Password"
    deps:
      - preflight
    cmds:
      - |
        {{.OP_RUN}} \
          terraform \
            apply
    silent: true

  console:
    desc: "Run `terraform console` and inject Secrets from 1Password"
    deps:
      - preflight
    cmds:
      - |
        {{.OP_RUN}} \
          terraform \
            console
    interactive: true
    silent: true

  destroy:
    desc: "Run `terraform destroy`"
    deps:
      - preflight
    cmds:
      - |
        {{.OP_RUN}} \
          terraform \
            destroy
    silent: true

  fmt:
    desc: "Run `terraform fmt`"
    deps:
      - preflight
    cmds:
      - |
        terraform \
          fmt \
            -recursive
    silent: true

  import:
    desc: "Run `terraform import` and inject Secrets from 1Password"
    deps:
      - preflight
    cmds:
      - |
        {{.OP_RUN}} \
          terraform \
            import \
              {{.identifiers}}
    silent: true
    vars:
      identifiers: "{{.identifiers}}"

  init:
    desc: "Run `terraform init`"
    deps:
      - preflight
    cmds:
      - |
        {{.OP_RUN}} \
          terraform \
            init \
              -upgrade
    silent: true

  modules:
    desc: "Run `terraform modules`"
    deps:
      - preflight
    cmds:
      - |
        terraform \
          modules
    silent: true

  plan:
    desc: "Run `terraform plan` and inject Secrets from 1Password"
    deps:
      - preflight
    cmds:
      - |
        {{.OP_RUN}} \
          terraform \
            plan
    silent: true

  providers:
    desc: "Run `terraform providers` and inject Secrets from 1Password"
    deps:
      - preflight
    cmds:
      - |
        {{.OP_RUN}} \
          terraform \
            providers
    silent: true

  state:
    desc: "Run `terraform state` and inject Secrets from 1Password"
    deps:
      - preflight
    cmds:
      - |
        {{.OP_RUN}} \
          terraform \
            state \
              {{.command}}
    silent: true
    vars:
      command: "{{.command}}"

  stacks:
    desc: "Run `terraform stacks` and inject Secrets from 1Password"
    deps:
      - preflight
    cmds:
      - |
        {{.OP_RUN}} \
          terraform \
            stacks \
              {{.command}}
    silent: true
    vars:
      command: "{{.command}}"

  stacks-fmt:
    aliases:
      - s-fmt
    desc: "Run `terraform stacks fmt`"
    deps:
      - preflight
    cmds:
      - |
        terraform \
          stacks \
            fmt
    silent: true

  stacks-init:
    aliases:
      - s-init
    desc: "Run `terraform stacks init` and inject Secrets from 1Password"
    deps:
      - preflight
    cmds:
      - |
        {{.OP_RUN}} \
          terraform \
            stacks \
              init
    silent: true

  stacks-providers-lock:
    aliases:
      - s-p-lock
    desc: "Run `terraform stacks providers-lock`"
    deps:
      - preflight
    cmds:
      - |
        terraform \
          stacks \
            providers-lock \
              -platform="{{.platform}}"
    vars:
      platform: "linux_amd64"
    silent: true

  stacks-validate:
    aliases:
      - s-validate
    desc: "Run `terraform stacks validate` and inject Secrets from 1Password"
    deps:
      - preflight
    cmds:
      - |
        {{.OP_RUN}} \
          terraform \
            stacks \
              validate
    silent: true

  taint:
    desc: "Run `terraform taint` and inject Secrets from 1Password"
    deps:
      - preflight
    cmds:
      - |
        {{.OP_RUN}} \
          terraform \
            taint \
              {{.resource}}
    silent: true
    vars:
      resource: "{{.resource}}"

  terraform:
    desc: "Run `terraform` and inject Secrets from 1Password"
    deps:
      - preflight
    cmds:
      - |
        {{.OP_RUN}} \
          terraform \
            {{.command}}
    silent: true
    vars:
      command: "{{.command}}"

  validate:
    desc: "Run `terraform validate`"
    deps:
      - preflight
    cmds:
      - |
        terraform \
          validate
    silent: true
